// <auto-generated />
using System;
using HospAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230717135046_CampoNombre")]
    partial class CampoNombre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpedienteMedico", b =>
                {
                    b.Property<int>("ExpedientesExpedienteId")
                        .HasColumnType("int");

                    b.Property<int>("MedicosMedicoId")
                        .HasColumnType("int");

                    b.HasKey("ExpedientesExpedienteId", "MedicosMedicoId");

                    b.HasIndex("MedicosMedicoId");

                    b.ToTable("ExpedienteMedico");
                });

            modelBuilder.Entity("HospAPI.Models.ArchivoEstudio", b =>
                {
                    b.Property<int>("ArchivoEstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArchivoEstudioId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRealizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenDicom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArchivoEstudioId");

                    b.HasIndex("EstudioId");

                    b.ToTable("ArchivosEstudios");
                });

            modelBuilder.Entity("HospAPI.Models.Estudio", b =>
                {
                    b.Property<int>("EstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstudioId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEstudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEstudioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("EstudioId");

                    b.HasIndex("TipoEstudioId");

                    b.ToTable("Etudios");
                });

            modelBuilder.Entity("HospAPI.Models.Expediente", b =>
                {
                    b.Property<int>("ExpedienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpedienteId"));

                    b.Property<string>("ArchivoExpediente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("ExpedienteId");

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Expedientes");
                });

            modelBuilder.Entity("HospAPI.Models.Investigacion", b =>
                {
                    b.Property<int>("InvestigacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestigacionId"));

                    b.Property<string>("Articulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreArticulo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("InvestigacionId");

                    b.ToTable("Investigaciones");
                });

            modelBuilder.Entity("HospAPI.Models.Laboratorio", b =>
                {
                    b.Property<int>("LaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaboratorioId"));

                    b.Property<string>("ArchivoLab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Creatinina")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRealizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("Urea")
                        .HasColumnType("int");

                    b.HasKey("LaboratorioId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("HospAPI.Models.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoId"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CedulaProfesional")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Estaus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaIngreso")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<string>("NombreMedico")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SubEspecialidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("MedicoId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("HospAPI.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"));

                    b.Property<int>("Agregado")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("NSS")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("NombrePaciente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("UMF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("HospAPI.Models.Reporte", b =>
                {
                    b.Property<int>("ReporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReporteId"));

                    b.Property<string>("Caso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReporte")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("ReporteMedico")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReporteId");

                    b.HasIndex("EstudioId")
                        .IsUnique();

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("HospAPI.Models.TipoEstudio", b =>
                {
                    b.Property<string>("TipoEstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("NombreTipoEstudio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoEstudioId");

                    b.ToTable("TiposEstudios");
                });

            modelBuilder.Entity("InvestigacionMedico", b =>
                {
                    b.Property<int>("InvestigacionesInvestigacionId")
                        .HasColumnType("int");

                    b.Property<int>("MedicosMedicoId")
                        .HasColumnType("int");

                    b.HasKey("InvestigacionesInvestigacionId", "MedicosMedicoId");

                    b.HasIndex("MedicosMedicoId");

                    b.ToTable("InvestigacionMedico");
                });

            modelBuilder.Entity("ExpedienteMedico", b =>
                {
                    b.HasOne("HospAPI.Models.Expediente", null)
                        .WithMany()
                        .HasForeignKey("ExpedientesExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospAPI.Models.Medico", null)
                        .WithMany()
                        .HasForeignKey("MedicosMedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospAPI.Models.ArchivoEstudio", b =>
                {
                    b.HasOne("HospAPI.Models.Estudio", "Estudio")
                        .WithMany("ArchivosEstudios")
                        .HasForeignKey("EstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudio");
                });

            modelBuilder.Entity("HospAPI.Models.Estudio", b =>
                {
                    b.HasOne("HospAPI.Models.TipoEstudio", "TipoEstudio")
                        .WithMany("Estudios")
                        .HasForeignKey("TipoEstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEstudio");
                });

            modelBuilder.Entity("HospAPI.Models.Expediente", b =>
                {
                    b.HasOne("HospAPI.Models.Paciente", null)
                        .WithOne("Expediente")
                        .HasForeignKey("HospAPI.Models.Expediente", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospAPI.Models.Laboratorio", b =>
                {
                    b.HasOne("HospAPI.Models.Paciente", "Paciente")
                        .WithMany("Laboratorios")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospAPI.Models.Reporte", b =>
                {
                    b.HasOne("HospAPI.Models.Estudio", null)
                        .WithOne("Reporte")
                        .HasForeignKey("HospAPI.Models.Reporte", "EstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospAPI.Models.Medico", "Medico")
                        .WithMany("Reportes")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospAPI.Models.Paciente", "Paciente")
                        .WithMany("Reportes")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("InvestigacionMedico", b =>
                {
                    b.HasOne("HospAPI.Models.Investigacion", null)
                        .WithMany()
                        .HasForeignKey("InvestigacionesInvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospAPI.Models.Medico", null)
                        .WithMany()
                        .HasForeignKey("MedicosMedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospAPI.Models.Estudio", b =>
                {
                    b.Navigation("ArchivosEstudios");

                    b.Navigation("Reporte");
                });

            modelBuilder.Entity("HospAPI.Models.Medico", b =>
                {
                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("HospAPI.Models.Paciente", b =>
                {
                    b.Navigation("Expediente");

                    b.Navigation("Laboratorios");

                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("HospAPI.Models.TipoEstudio", b =>
                {
                    b.Navigation("Estudios");
                });
#pragma warning restore 612, 618
        }
    }
}
